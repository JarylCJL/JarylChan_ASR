services:
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    container_name: es01
    environment:
      - discovery.seed_hosts=es02  # Define the second node as a seed host for clustering
      - cluster.name=cv-cluster
      - cluster.initial_master_nodes=es01,es02
      - node.name=es01
      - bootstrap.memory_lock=true  # Lock memory for stability
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"  # Set JVM heap size
      - "http.cors.enabled=true"
      - "http.cors.allow-origin=*"
      - "http.cors.allow-methods=OPTIONS,HEAD,GET,POST,PUT,DELETE"
      - "http.cors.allow-headers=X-Requested-With, X-Auth-Token, Content-Type, Content-Length, Authorization, Access-Control-Allow-Headers, Accept, x-elastic-client-meta"
      - "http.cors.allow-credentials=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"  # Expose port 9200 for HTTP access
    networks:
      - es-net

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    container_name: es02
    environment:
      - discovery.seed_hosts=es01  # Define the first node as a seed host
      - cluster.name=cv-cluster
      - cluster.initial_master_nodes=es01,es02
      - node.name=es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - "http.cors.enabled=true"
      - "http.cors.allow-origin=*"
      - "http.cors.allow-methods=OPTIONS,HEAD,GET,POST,PUT,DELETE"
      - "http.cors.allow-headers=X-Requested-With, X-Auth-Token, Content-Type, Content-Length, Authorization, Access-Control-Allow-Headers, Accept, x-elastic-client-meta"
      - "http.cors.allow-credentials=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - es-net

networks:
  es-net:
    driver: bridge
    name: es-net
